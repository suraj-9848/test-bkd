name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Format check
        run: pnpm run format:check
        
      - name: Lint
        run: pnpm run lint
      - name: Type check
        run: pnpm exec tsc --noEmit

  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: testpassword
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306
          
      redis:
        image: redis:7
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 6379:6379
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Run tests
        run: pnpm run ci-test
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 3306
          DB_USERNAME: testuser
          DB_PASSWORD: testpassword
          DB_DATABASE: testdb
          REDIS_HOST: localhost
          REDIS_PORT: 6379

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build
        run: pnpm run build
        env:
          NODE_ENV: production
          # Mock environment variables for CI build
          JWT_SECRET: mock-jwt-secret-for-ci-only
          GOOGLE_CLIENT_ID: mock-client-id.apps.googleusercontent.com
          GOOGLE_CLIENT_SECRET: mock-client-secret
          MYSQL_DEV_DATABASE_URL: mysql://testuser:testpassword@localhost:3306/testdb
          MYSQL_PROD_DATABASE_URL: mysql://testuser:testpassword@localhost:3306/testdb
          MONGO_KEY: mongodb://localhost:27017/testdb
          REDIS_URL_DEV: redis://localhost:6379
          REDIS_URL_PROD: redis://localhost:6379
          AWS_ACCESS_KEY_ID: mock-access-key
          AWS_SECRET_ACCESS_KEY: mock-secret-key
          AWS_REGION: us-east-1
          AWS_S3_BUCKET_NAME: mock-bucket
          CORS_ORIGIN: http://localhost:3000
          
      - name: Check build artifacts
        run: |
          if [ ! -d "build" ]; then
            echo "Build directory not found!"
            exit 1
          fi
          echo "Build completed successfully"
